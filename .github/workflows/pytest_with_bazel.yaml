# This workflow will install Python dependencies, lint and run tests.
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  pre-commit_linting:
    runs-on: ubuntu-latest
    # Skip if got triggered by a PR that is still in draft
    if: github.event.pull_request.draft == false  

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref_name }}
          submodules: true  # submodules needed, otherwise mypy gets confused about ignoring them
          token: ${{ secrets.CHECKOUT_PRIVATE_RESEARCH_FOR_PERCEPTEST }}

      - name: Install pre-commit dependencies
        run: |
          # Install buildifier manually because it does not install automatically 
          if ! curl -f -L -o /usr/local/bin/buildifier \
            "https://github.com/bazelbuild/buildtools/releases/download/v7.1.0/buildifier-linux-amd64"; then
            echo "Could not download buildifier."
            exit 1
          fi
          chmod +x /usr/local/bin/buildifier

          # Install the rest of the pre-commmit dependencies automatically
          pip install pre-commit==3.7.0
          pre-commit install

      - name: Run pre-commit checks
        run: pre-commit run --all-files

  functional_testing:
    runs-on: ubuntu-latest
    # Skip if got triggered by a PR that is still in draft
    if: github.event.pull_request.draft == false  
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref_name }}
          submodules: true
          token: ${{ secrets.CHECKOUT_PRIVATE_RESEARCH_FOR_PERCEPTEST }}
      - uses: bazelbuild/setup-bazelisk@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Do perceptest-specific preparations
        run: |
          cp .env_bazel_test_default .env
      - name: Bazel build
        run: |
          bazel build //...
      - name: Test with bazel and pytest
        run: |
          bazel test //... --test_output=all
